{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/core/repo-entity.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/repository-item/repository-item.component.css","webpack:///./src/app/repository-item/repository-item.component.html","webpack:///./src/app/repository-item/repository-item.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n<h1>\\n    Looking for repository..\\n  </h1>\\n  <router-outlet></router-outlet>\\n</div>  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from 'src/app/home/home.component';\nimport {MatInputModule, MatButtonModule, MatIconModule, MatCardModule} from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { DataService } from 'src/app/core/data.service';\nimport { HttpHandler } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RepositoryItemComponent } from './repository-item/repository-item.component';\nimport {NgxPaginationModule} from 'ngx-pagination'; \n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RepositoryItemComponent\n  ],\n  imports: [\nRouterModule.forRoot(routes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,MatButtonModule, MatIconModule,MatCardModule,\n    NgxPaginationModule\n  ],\n  providers: [\n    DataService\n    \n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaderResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { RepoEntity } from './repo-entity';\nimport { environment } from 'src/environments/environment';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport * as _ from 'lodash';\n\n\ninterface IServerResponse {\n  items: string[];\n  total: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  //package object - for push data while server return a response\n  public packageData: BehaviorSubject<RepoEntity[]> = new BehaviorSubject<RepoEntity[]>(null);\n\n  itemsPerPage: number = 15;\n  total_items: number;\n\n  constructor(private http: HttpClient) { }\n\n  findRepositories(term, page) {\n\n    //set query string params\n    let params = new HttpParams().set(\"q\", term)\n      .set(\"page\", page)\n      .set(\"per_page\", this.itemsPerPage.toString());\n\n      //call to GIT api\n    this.http.get(environment.gitAPI, { params: params }).pipe(\n      map((res) => {\n        return res;\n      }),\n      catchError(this.handleError)).subscribe((res) => {\n        \n        //save paging details, and map result items to RepoEntity object\n        this.total_items = res[\"total_count\"];\n        let arr: RepoEntity[] = new Array();\n        arr = res[\"items\"].map(item => new RepoEntity(item.name, item.url, item.owner.avatar_url, item.owner.id, item.description, item.id));\n        \n        //push data to packageData, this will rise all 'subscribe()' calling\n        this.packageData.next(arr);\n      });\n  }\n\n  bookmarkMe(item: RepoEntity): Observable<any> {\n    let _headers = new HttpHeaders().set(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\")\n    .set(\"Access-Control-Allow-Origin\",\"*\")\n    .set(\"Access-Control-Allow-Methods\",\"GET, POST, DELETE, PUT\");\n    // _headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    // _headers['Access-Control-Allow-Origin'] = '*';\n    // _headers['Access-Control-Allow-Methods'] = 'GET, POST, DELETE, PUT';\n\n    let request = { item: JSON.stringify(item) };\n\n    return this.http.post(environment.bookmarksAPI + \"/api/sessionstorage/save\", this.encodeUrlParams(request), { headers: _headers, withCredentials: true });\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.log(error);\n\n    // return an observable with a user friendly message\n    return throwError('Error occured. pls try again later..');\n  }\n\n  //encoded params that sending to server\n  //on server side will get it in POST method as [FormBody] paramter\n  public encodeUrlParams(data) {\n    var body = new HttpParams();\n    _.forEach(data, (value, key) => {\n      body = body.append(key, value)\n\n    })\n    return body;\n  }\n\n}\n","export class RepoEntity {\n\n    name;\n    url;\n    avatar;\n    owner;\n    desc;\n    id;\n\n    constructor(\n        name,\n        url,\n        avatar,\n        owner,\n        desc,\n        id) {\n        this.name = name;\n        this.url = url;\n        this.avatar = avatar;\n        this.owner = owner;\n        this.desc = desc;\n        this.id = id;\n    }\n\n}\n","module.exports = \".example-form-field {\\r\\n    width: 200px;\\r\\n  }\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.rep{\\r\\n  float: left;\\r\\n  margin: 20px; \\r\\n  width: 25%;\\r\\n}\\r\\n.mat-mini-fab.mat-warn{\\r\\n  margin: 20px;\\r\\n}\\r\\n.loading{\\r\\nmargin-left: 50%;\\r\\n  \\r\\n}\"","module.exports = \"<!-- search control -->\\n<mat-form-field class=\\\"example-form-field\\\">\\n  <input matInput type=\\\"text\\\" placeholder=\\\"type repository name\\\" [(ngModel)]=\\\"value\\\" (keyup.enter)=\\\"search(1)\\\">\\n  <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\">\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</mat-form-field>\\n<button mat-mini-fab color=\\\"warn\\\" (click)=\\\"search(1)\\\">GO</button>\\n\\n<!-- result section-->\\n<div class=\\\"row\\\">\\n  <div *ngIf=\\\"repArray != null && repArray.length > 0\\\">\\n    <pagination-controls (pageChange)=\\\"search($event)\\\" ></pagination-controls>\\n  </div>\\n  <div [ngClass]=\\\"{ 'hidden': !loading }\\\" class=\\\"loading\\\">\\n    <img src=\\\"/assets/images/loading.gif\\\" />\\n  </div>\\n  <!-- loop through all repositories, each one rendered as sub component: 'app-repository-item' -->\\n  <div [ngClass]=\\\"{ 'hidden': loading }\\\" *ngFor=\\\"let repItem of repArray | paginate: { itemsPerPage: 15, currentPage: p, totalItems: total }\\\" class=\\\"rep\\\">\\n    <app-repository-item [data]=\\\"repItem\\\" class=\\\"\\\"></app-repository-item>\\n  </div>\\n\\n\\n</div>\"","import { RepoEntity } from './../core/repo-entity';\nimport { Component, OnInit } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DataService } from 'src/app/core/data.service';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  value = '';\n  repArray: RepoEntity[];\n\n  asyncReps: Observable<RepoEntity[]>;\n  p: number = 1;\n  total: number = 0;\n  loading: boolean = false;\n\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n\n    //subscribe to package data - will occured on each 'next()' calling\n    this.dataService.packageData.subscribe((res: RepoEntity[]) => {\n      if (res != null) {\n        //hide loading gif\n        this.loading = false;\n        //save repository array \n        this.repArray = res;\n        //save total items - for paging control\n        this.total = this.dataService.total_items;\n        \n        //TODO: check if there are no data, show message, hide loading, etc...\n      }\n    });\n  }\n\n  search(page: number) {\n    //show loading gif\n    this.loading = true; \n    //save current page\n    this.p = page;\n    //retrieve data from server according to page number\n    this.dataService.findRepositories(this.value, page);\n  }\n\n  \n}\n","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n  \\r\\n  .avatarImg{\\r\\n    border-radius: 50%;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-card-content{\\r\\n    word-break: break-word;\\r\\n    text-overflow: ellipsis;\\r\\n    height: 200px;\\r\\n    overflow: hidden;\\r\\n    /* max-height: 200px !important; */\\r\\n  }\\r\\n  \\r\\n  .mat-card-header{\\r\\n    min-height: 100px;\\r\\n  }\\r\\n  \\r\\n  .mat-card-header .mat-card-title{\\r\\n    word-break: break-all;\\r\\n    text-overflow: ellipsis;\\r\\n    max-height: 60px;\\r\\n    overflow: hidden;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .bookmark{\\r\\n    font-weight: bold;\\r\\n    color: #66b6c4;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar>\\n      <img src=\\\"{{data.avatar}}\\\" class=\\\"avatarImg\\\" />\\n    </div>\\n    <mat-card-title>{{data.name}}</mat-card-title>\\n    <mat-card-subtitle># {{data.id}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>\\n      {{data.desc}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button class=\\\"bookmark\\\" (click)=\\\"bookmark()\\\">\\n      Bookmark Me!\\n      <img src='/assets/images/i_doc-active.png'>\\n    </button>\\n  </mat-card-actions>\\n</mat-card>\"","import { DataService } from 'src/app/core/data.service';\nimport { RepoEntity } from './../core/repo-entity';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-repository-item',\n  templateUrl: './repository-item.component.html',\n  styleUrls: ['./repository-item.component.css']\n})\nexport class RepositoryItemComponent implements OnInit {\n\n  @Input() data : RepoEntity;\n  \n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    \n  }\n\n  bookmark(){\n\n    //this method calling to server \n    //will not working, bcoz you need web api side\n    this.dataService.bookmarkMe(this.data).subscribe((res)=>{\n      if (res != null){\n        //TODO: show label 'DONE' or another icon instead of button\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  gitAPI: \"https://api.github.com/search/repositories\",\n  bookmarksAPI:\"/api\"  \n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}